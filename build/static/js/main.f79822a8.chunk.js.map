{"version":3,"sources":["theme/index.ts","Components/Layout.tsx","Components/Identicon.tsx","Components/ConnectButton.tsx","Components/AccountModal.tsx","App.tsx","index.tsx"],"names":["extendTheme","fonts","heading","body","Layout","children","flexDirection","alignItems","justifyContent","h","bg","StyledIdenticon","styled","div","Identicon","ref","useRef","account","useEthers","useEffect","current","innerHTML","appendChild","Jazzicon","parseInt","slice","ConnectButton","handleOpenModal","activateBrowserWallet","etherBalance","useEtherBalance","display","background","borderRadius","py","px","color","fontSize","parseFloat","formatEther","toFixed","onClick","border","_hover","borderStyle","borderColor","backgroundColor","m","height","fontWeight","mr","length","AccountModal","isOpen","onClose","deactivate","isCentered","size","pt","pb","mb","variant","textDecoration","mt","lineHeight","ml","alignContent","Copy","href","isExternal","ExternalLink","borderBottomLeftRadius","borderBottomRightRadius","p","textAlign","App","useDisclosure","onOpen","theme","ReactDOM","render","StrictMode","DAppProvider","config","document","getElementById"],"mappings":"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","file":"static/js/main.f79822a8.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nexport default extendTheme({\n    fonts: {\n        heading: \"Inter\",\n        body: \"Inter\",\n    },\n});","import { ReactNode } from \"react\";\nimport { Flex } from \"@chakra-ui/react\";\n\ntype Props = {\n    children?: ReactNode;\n};\n\nexport default function Layout({ children }: Props) {\n    return (\n        <Flex\n          flexDirection=\"column\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          h=\"100vh\"\n          bg=\"gray.800\"\n        >\n            {children}\n        </Flex>\n    )\n}","import { useEffect, useRef } from \"react\";\nimport { useEthers } from \"@usedapp/core\";\nimport styled from \"@emotion/styled\";\nimport Jazzicon from \"@metamask/jazzicon\";\n\nconst StyledIdenticon = styled.div`\n   height: 1rem;\n   width: 1rem;\n   border-radius: 1.125rem;\n   background-color:black;\n`;\n\nexport default function Identicon() {\n   const ref = useRef<HTMLDivElement>();\n   const { account } = useEthers();\n\n   useEffect(() => {\n     if (account && ref.current) {\n         ref.current.innerHTML = \"\";\n         ref.current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)));\n     }\n   }, [account]);\n\n    return <StyledIdenticon ref={ref as any} />\n}","// ConnectButton.tsx\nimport { Button, Box, Text } from \"@chakra-ui/react\";\nimport { useEthers, useEtherBalance } from \"@usedapp/core\";\nimport { formatEther } from \"@ethersproject/units\";\nimport Identicon from \"./Identicon\";\n\ntype Props = {\n    handleOpenModal: any;\n}\n\nexport default function ConnectButton({handleOpenModal}: Props) {\n    const {activateBrowserWallet, account} = useEthers();\n    const etherBalance = useEtherBalance(account);\n\n    function handleConnectWallet() {\n        activateBrowserWallet();\n    }\n\n    return account ? (\n       \n        <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        background=\"gray.700\"\n        borderRadius=\"xl\"\n        py=\"0\"\n      >    \n        <Box px=\"3\">\n            <Text color=\"white\" fontSize=\"md\">\n                {etherBalance && parseFloat(formatEther(etherBalance)).toFixed(3)} ETH\n            </Text>\n        </Box>\n        <Button\n        onClick={handleOpenModal}\n         bg=\"gray.800\"\n         border=\"1px solid transparent\"\n         _hover={{\n             border: \"1px\",\n             borderStyle: \"solid\",\n             borderColor: \"blue.400\",\n             backgroundColor: \"gray.700\",\n         }}\n         borderRadius=\"xl\"\n         m=\"1px\"\n         px={3}\n         height=\"38px\"\n        >\n          <Text color=\"white\" fontSize=\"md\" fontWeight=\"medium\" mr=\"2\">\n            {account &&\n             `${account.slice(0,6)}...${account.slice(\n               account.length - 4,\n               account.length  \n             )}`}\n          </Text>\n           <Identicon />\n        </Button>\n\n      </Box>\n    ) : (\n       <Button onClick={handleConnectWallet}>\n           Connect to a wallet\n      </Button>\n    );\n}","import {\n    Box,\n    Button,\n    Flex,\n    Link,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    Text,\n} from \"@chakra-ui/react\";\n\nimport { ExternalLinkIcon, CopyIcon } from \"@chakra-ui/icons\";\nimport { useEthers } from \"@usedapp/core\";\nimport Identicon from \"./Identicon\";\n\ntype Props = {\n    isOpen: any;\n    onClose: any;\n}\n\nexport default function AccountModal({ isOpen, onClose }: Props) {\n  const { account, deactivate } = useEthers();\n\n  function handleDeactivateAccount() {\n      deactivate();\n      onClose();\n  }\n\n  return (\n    \n    <Modal isOpen={isOpen} onClose={onClose} isCentered size=\"md\">\n\n   \n      <ModalOverlay />\n      <ModalContent\n        background=\"gray.900\"\n        border=\"1px\"\n        borderStyle=\"solid\"\n        borderColor=\"gray.700\"\n        borderRadius=\"3xl\"\n     >\n       <ModalHeader color=\"white\" px={4} fontSize=\"lg\" fontWeight=\"medium\">\n           Account\n       </ModalHeader>\n       <ModalCloseButton\n         color=\"white\"\n         fontSize=\"sm\"\n         _hover={{\n             color: \"whiteAlpha.700\",\n         }}\n        />\n        <ModalBody pt={0} px={4}>\n         <Box\n           borderRadius=\"3xl\"\n           border=\"1px\"\n           borderStyle=\"solid\"\n           borderColor=\"gray.600\"\n           px={5}\n           pt={4}\n           pb={2}\n           mb={3}\n         >\n           <Flex justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n             <Text color=\"gray.400\" fontSize=\"sm\">\n                 Connected with MetaMask\n             </Text>\n             <Button\n               variant=\"outline\"\n               size=\"sm\"\n               borderColor=\"blue.800\"\n               borderRadius=\"3xl\"\n               color=\"blue.500\"\n               fontSize=\"13px\"\n               fontWeight= \"normal\"\n               px={2}\n               height=\"26px\"\n               _hover={{\n                   background: \"none\",\n                   borderColor: \"blue.300\",\n                   textDecoration: \"underline\",\n               }}\n\n               onClick={handleDeactivateAccount}\n            >\n                Change\n            </Button>\n         </Flex>\n         <Flex alignItems=\"center\" mt={2} mb={4} lineHeight={1}>\n            <Identicon />\n            <Text\n              color=\"white\"\n              fontSize=\"xl\"\n              fontWeight=\"semibold\"\n              ml=\"2\"\n              lineHeight= \"1.1\"\n            >\n              {account &&\n                `${account.slice(0,6)}...${account.slice(\n                    account.length - 4,\n                    account.length\n                )}`}\n           </Text>\n         </Flex>\n         <Flex alignContent=\"center\" m={3}>\n           <Button\n             variant=\"link\"\n             color=\"gray.400\"\n             fontWeight=\"normal\"\n             fontSize=\"sm\"\n             _hover={{\n                 textDecoration: \"none\",\n                 color: \"whiteAlpha.800\",\n             }}\n            >\n                <CopyIcon mr={1} />\n                Copy Address\n            </Button>\n            <Link\n              fontSize=\"sm\"\n              display=\"flex\"\n              alignItems=\"center\"\n              href={`https://ropsten.etherscan.io/address/${account}`}\n              isExternal\n              color=\"gray.400\"\n              ml={6}\n              _hover={{\n                  color: \"whiteAlpha.800\",\n                  textDecoration: \"underline\",\n              }}\n            >\n                <ExternalLinkIcon mr={1}  />\n                  View on Explorer\n            </Link>\n          </Flex>\n         </Box>\n       </ModalBody>\n         \n       <ModalFooter\n         justifyContent=\"end\"\n         background=\"gray.700\"\n         borderBottomLeftRadius=\"3xl\"\n         borderBottomRightRadius=\"3xl\"\n         p={6}\n        >\n          <Text\n            color=\"white\"\n            textAlign=\"left\"\n            fontWeight=\"medium\"\n            fontSize=\"md\"\n          >\n             Your transactions will appear here...\n          </Text>\n       </ModalFooter>\n     </ModalContent>\n    </Modal>\n   \n  )\n}","// App.tsx\nimport {ChakraProvider, useDisclosure} from \"@chakra-ui/react\";\nimport theme from \"./theme\";\nimport Layout from \"./Components/Layout\";\nimport ConnectButton from \"./Components/ConnectButton\";\nimport AccountModal from \"./Components/AccountModal\";\nimport \"@fontsource/inter\";\n\nfunction App() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    // let us use Chakra UI syntax across our app:\n    <ChakraProvider theme={theme}>\n       <Layout>\n         <ConnectButton handleOpenModal={onOpen} />\n\n         <AccountModal isOpen={isOpen} onClose={onClose} />\n\n       </Layout>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","//index.tsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n// Import DAppProvider\nimport {DAppProvider} from \"@usedapp/core\";\n\nReactDOM.render(\n  <React.StrictMode>\n    {/*\n      Wrap our app in the provider, config is required,\n      but can be left as an empty object:\n    */}\n    <DAppProvider config={{}}>\n    <App />\n    </DAppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}